/* tslint:disable */
/* eslint-disable */
/**
 * Swagger Example API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  TypesLoginReq,
  TypesLoginResp,
} from '../models';
import {
    TypesLoginReqFromJSON,
    TypesLoginReqToJSON,
    TypesLoginRespFromJSON,
    TypesLoginRespToJSON,
} from '../models';

export interface UserLoginRequest {
    body: TypesLoginReq;
}

/**
 * CustomerApi - interface
 * 
 * @export
 * @interface CustomerApiInterface
 */
export interface CustomerApiInterface {
    /**
     * user login
     * @summary user login logic
     * @param {TypesLoginReq} body Login info
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CustomerApiInterface
     */
    userLoginRaw(requestParameters: UserLoginRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TypesLoginResp>>;

    /**
     * user login
     * user login logic
     */
    userLogin(requestParameters: UserLoginRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TypesLoginResp>;

}

/**
 * 
 */
export class CustomerApi extends runtime.BaseAPI implements CustomerApiInterface {

    /**
     * user login
     * user login logic
     */
    async userLoginRaw(requestParameters: UserLoginRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TypesLoginResp>> {
        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling userLogin.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/sys/user/login`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: TypesLoginReqToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TypesLoginRespFromJSON(jsonValue));
    }

    /**
     * user login
     * user login logic
     */
    async userLogin(requestParameters: UserLoginRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TypesLoginResp> {
        const response = await this.userLoginRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/* tslint:disable */
/* eslint-disable */
/**
 * Swagger Example API
 * This is a sample server celler server.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
/**
 *
 * @export
 * @interface TypesListUserData
 */
export interface TypesListUserData {
  /**
   * 头像
   * @type {string}
   * @memberof TypesListUserData
   */
  avatar: string
  /**
   * 创建人
   * @type {string}
   * @memberof TypesListUserData
   */
  createBy: string
  /**
   * 创建时间
   * @type {string}
   * @memberof TypesListUserData
   */
  createTime: string
  /**
   * 是否删除  -1：已删除  0：正常
   * @type {number}
   * @memberof TypesListUserData
   */
  delFlag: number
  /**
   * 邮箱
   * @type {string}
   * @memberof TypesListUserData
   */
  email: string
  /**
   * 编号
   * @type {number}
   * @memberof TypesListUserData
   */
  id: number
  /**
   * 更新人
   * @type {string}
   * @memberof TypesListUserData
   */
  lastUpdateBy: string
  /**
   * 更新时间
   * @type {string}
   * @memberof TypesListUserData
   */
  lastUpdateTime: string
  /**
   * 手机号
   * @type {string}
   * @memberof TypesListUserData
   */
  mobile: string
  /**
   * 用户名
   * @type {string}
   * @memberof TypesListUserData
   */
  name: string
  /**
   * 昵称
   * @type {string}
   * @memberof TypesListUserData
   */
  nickName: string
  /**
   * 密码
   * @type {string}
   * @memberof TypesListUserData
   */
  password: string
  /**
   * 加密盐
   * @type {string}
   * @memberof TypesListUserData
   */
  salt: string
  /**
   * 状态  0：禁用   1：正常
   * @type {number}
   * @memberof TypesListUserData
   */
  status: number
}

/**
 * Check if a given object implements the TypesListUserData interface.
 */
export function instanceOfTypesListUserData(value: object): boolean {
  let isInstance = true
  isInstance = isInstance && 'avatar' in value
  isInstance = isInstance && 'createBy' in value
  isInstance = isInstance && 'createTime' in value
  isInstance = isInstance && 'delFlag' in value
  isInstance = isInstance && 'email' in value
  isInstance = isInstance && 'id' in value
  isInstance = isInstance && 'lastUpdateBy' in value
  isInstance = isInstance && 'lastUpdateTime' in value
  isInstance = isInstance && 'mobile' in value
  isInstance = isInstance && 'name' in value
  isInstance = isInstance && 'nickName' in value
  isInstance = isInstance && 'password' in value
  isInstance = isInstance && 'salt' in value
  isInstance = isInstance && 'status' in value

  return isInstance
}

export function TypesListUserDataFromJSON(json: any): TypesListUserData {
  return TypesListUserDataFromJSONTyped(json, false)
}

export function TypesListUserDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): TypesListUserData {
  if (json === undefined || json === null) {
    return json
  }
  return {
    avatar: json['avatar'],
    createBy: json['createBy'],
    createTime: json['createTime'],
    delFlag: json['delFlag'],
    email: json['email'],
    id: json['id'],
    lastUpdateBy: json['lastUpdateBy'],
    lastUpdateTime: json['lastUpdateTime'],
    mobile: json['mobile'],
    name: json['name'],
    nickName: json['nickName'],
    password: json['password'],
    salt: json['salt'],
    status: json['status'],
  }
}

export function TypesListUserDataToJSON(value?: TypesListUserData | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    avatar: value.avatar,
    createBy: value.createBy,
    createTime: value.createTime,
    delFlag: value.delFlag,
    email: value.email,
    id: value.id,
    lastUpdateBy: value.lastUpdateBy,
    lastUpdateTime: value.lastUpdateTime,
    mobile: value.mobile,
    name: value.name,
    nickName: value.nickName,
    password: value.password,
    salt: value.salt,
    status: value.status,
  }
}

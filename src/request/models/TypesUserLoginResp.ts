/* tslint:disable */
/* eslint-disable */
/**
 * Swagger Example API
 * This is a sample server celler server.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
/**
 *
 * @export
 * @interface TypesUserLoginResp
 */
export interface TypesUserLoginResp {
  /**
   *
   * @type {number}
   * @memberof TypesUserLoginResp
   */
  accessExpire: number
  /**
   *
   * @type {string}
   * @memberof TypesUserLoginResp
   */
  currentAuthority: string
  /**
   *
   * @type {number}
   * @memberof TypesUserLoginResp
   */
  id: number
  /**
   *
   * @type {number}
   * @memberof TypesUserLoginResp
   */
  refreshAfter: number
  /**
   *
   * @type {string}
   * @memberof TypesUserLoginResp
   */
  status: string
  /**
   *
   * @type {string}
   * @memberof TypesUserLoginResp
   */
  token: string
  /**
   *
   * @type {string}
   * @memberof TypesUserLoginResp
   */
  userName: string
}

/**
 * Check if a given object implements the TypesUserLoginResp interface.
 */
export function instanceOfTypesUserLoginResp(value: object): boolean {
  let isInstance = true
  isInstance = isInstance && 'accessExpire' in value
  isInstance = isInstance && 'currentAuthority' in value
  isInstance = isInstance && 'id' in value
  isInstance = isInstance && 'refreshAfter' in value
  isInstance = isInstance && 'status' in value
  isInstance = isInstance && 'token' in value
  isInstance = isInstance && 'userName' in value

  return isInstance
}

export function TypesUserLoginRespFromJSON(json: any): TypesUserLoginResp {
  return TypesUserLoginRespFromJSONTyped(json, false)
}

export function TypesUserLoginRespFromJSONTyped(json: any, ignoreDiscriminator: boolean): TypesUserLoginResp {
  if (json === undefined || json === null) {
    return json
  }
  return {
    accessExpire: json['accessExpire'],
    currentAuthority: json['currentAuthority'],
    id: json['id'],
    refreshAfter: json['refreshAfter'],
    status: json['status'],
    token: json['token'],
    userName: json['userName'],
  }
}

export function TypesUserLoginRespToJSON(value?: TypesUserLoginResp | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    accessExpire: value.accessExpire,
    currentAuthority: value.currentAuthority,
    id: value.id,
    refreshAfter: value.refreshAfter,
    status: value.status,
    token: value.token,
    userName: value.userName,
  }
}

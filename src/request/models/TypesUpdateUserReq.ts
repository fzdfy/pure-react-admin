/* tslint:disable */
/* eslint-disable */
/**
 * Swagger Example API
 * This is a sample server celler server.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
/**
 *
 * @export
 * @interface TypesUpdateUserReq
 */
export interface TypesUpdateUserReq {
  /**
   *
   * @type {string}
   * @memberof TypesUpdateUserReq
   */
  email: string
  /**
   *
   * @type {number}
   * @memberof TypesUpdateUserReq
   */
  id: number
  /**
   *
   * @type {string}
   * @memberof TypesUpdateUserReq
   */
  mobile: string
  /**
   *
   * @type {string}
   * @memberof TypesUpdateUserReq
   */
  name: string
  /**
   *
   * @type {string}
   * @memberof TypesUpdateUserReq
   */
  nickName: string
  /**
   *
   * @type {number}
   * @memberof TypesUpdateUserReq
   */
  status: number
}

/**
 * Check if a given object implements the TypesUpdateUserReq interface.
 */
export function instanceOfTypesUpdateUserReq(value: object): boolean {
  let isInstance = true
  isInstance = isInstance && 'email' in value
  isInstance = isInstance && 'id' in value
  isInstance = isInstance && 'mobile' in value
  isInstance = isInstance && 'name' in value
  isInstance = isInstance && 'nickName' in value
  isInstance = isInstance && 'status' in value

  return isInstance
}

export function TypesUpdateUserReqFromJSON(json: any): TypesUpdateUserReq {
  return TypesUpdateUserReqFromJSONTyped(json, false)
}

export function TypesUpdateUserReqFromJSONTyped(json: any, ignoreDiscriminator: boolean): TypesUpdateUserReq {
  if (json === undefined || json === null) {
    return json
  }
  return {
    email: json['email'],
    id: json['id'],
    mobile: json['mobile'],
    name: json['name'],
    nickName: json['nickName'],
    status: json['status'],
  }
}

export function TypesUpdateUserReqToJSON(value?: TypesUpdateUserReq | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    email: value.email,
    id: value.id,
    mobile: value.mobile,
    name: value.name,
    nickName: value.nickName,
    status: value.status,
  }
}
